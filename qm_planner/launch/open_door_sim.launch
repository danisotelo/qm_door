<launch>

    <param name="tf2_buffer_core/repeated_data_warn_throttle" value="1000.0" />

    <!-- Detection configuration -->
    <arg name="weights1" default="$(find qm_vision)/models/yolov8n-seg_handle.pt"/>
    <arg name="weights2" default="$(find qm_vision)/models/yolov8n_door.pt"/>
    <arg name="confidence_threshold" default="0.75"/>
    <arg name="iou_threshold" default="0.45"/>
    <arg name="maximum_detections" default="1"/>
    <arg name="threshold_l"      default="30"/>
    <arg name="threshold_u"      default="255"/>

    <!-- Visualize using OpenCV window -->
    <arg name="view_image" default="true"/>
    <!-- Publish images to ros topic -->
    <arg name="publish_image" default="true"/>
    
    <!-- Input data topics -->
    <arg name="input_image_topic" default="/camera/color/image_raw"/>
    <arg name="input_image_topic2" default="/camera2/color/image_raw"/>
    <arg name="camera_info_color_topic" default="/camera/color/camera_info"/>
    <arg name="camera_info_depth_topic" default="/camera/depth/camera_info"/>
    <arg name="camera2_info_color_topic" default="/camera2/color/camera_info"/>
    <arg name="camera2_info_depth_topic" default="/camera2/depth/camera_info"/> 
    <arg name="input_depth_topic" default="/camera/depth/image_rect_raw"/>
    <arg name="input_depth_topic2" default="/camera2/depth/image_raw"/>
    <arg name="input_pc_topic"    default="/camera/depth/color/points"/>
    <arg name="input_pc_topic2"    default="/camera2/depth/color/points"/>
    <arg name="optical_frame"     default="camera_link_optical"/>
    <arg name="optical_frame2"     default="camera2_depth_optical_frame"/>

    <!-- Module topics-->
    <arg name="output_image_topic" default="/handle/image"/>
    <arg name="output_mask_topic" default="/handle/mask"/>
    <arg name="output_depth_topic" default="/handle/depth_registered"/>
    <arg name="output_masked_depth_nr_topic" default="/handle/depth_masked"/>
    <arg name="output_masked_depth_topic" default="/handle/masked_depth_registered"/>  
    <arg name="output_pc_topic" default="/handle/points"/>
    <arg name="output_centroid_topic" default="/handle/centroid"/>
    <arg name="output_orientation_topic" default="/handle/orientation"/>
    <arg name="output_door_topic" default="/door/center"/>

    <node pkg="qm_vision" name="handle_pc" type="detect.py" output="screen">
        <param name="weights" value="$(arg weights1)"/>
        <param name="confidence_threshold" value="$(arg confidence_threshold)"/>
        <param name="iou_threshold" value="$(arg iou_threshold)" />
        <param name="maximum_detections" value="$(arg maximum_detections)"/>
        <param name="input_image_topic" value="$(arg input_image_topic)"/>
        <param name="input_depth_topic" value="$(arg input_depth_topic)"/> 
        <param name="view_image" value="$(arg view_image)"/>
        <param name="publish_image" value="$(arg publish_image)"/>
        <param name="camera_info_topic" value="$(arg camera_info_depth_topic)"/>
        <param name="output_image_topic" value="$(arg output_image_topic)"/>
        <param name="output_mask_topic" value="$(arg output_mask_topic)"/>
        <param name="output_masked_depth_nr_topic" value="$(arg output_masked_depth_nr_topic)"/>
        <param name="output_pc_topic" value="$(arg output_pc_topic)"/>
        <param name="optical_frame" value="$(arg optical_frame)"/>
    </node>

    <node pkg="qm_vision" name="handle_centroid" type="handle_centroid.py" output="screen">
        <param name="output_pc_topic" value="$(arg output_pc_topic)"/>
        <param name="output_centroid_topic" value="$(arg output_centroid_topic)"/>
        <param name="output_orientation_topic" value="$(arg output_orientation_topic)"/>
    </node>

    <node pkg="qm_vision" name="door_params" type="door_params.py" output="screen">
        <param name="view_image" value="$(arg view_image)"/>
        <param name="publish_image" value="$(arg publish_image)"/>
        <param name="output_mask_topic" value="$(arg output_mask_topic)"/>
        <param name="input_image_topic" value="$(arg input_image_topic)"/>
        <param name="camera_info_topic" value="$(arg camera_info_color_topic)"/>
        <param name="input_pc_topic" value="$(arg input_pc_topic)"/>
    </node>
    
    <node pkg="qm_vision" name="door_center" type="door_center.py" output="screen">
        <param name="weights" value="$(arg weights2)"/>
        <param name="confidence_threshold" value="$(arg confidence_threshold)"/>
        <param name="iou_threshold" value="$(arg iou_threshold)" />
        <param name="maximum_detections" value="$(arg maximum_detections)"/>
        <param name="view_image" value="$(arg view_image)"/>
        <param name="publish_image" value="$(arg publish_image)"/>
        <param name="output_centroid_topic" value="$(arg output_centroid_topic)"/>
        <param name="input_image_topic" value="$(arg input_image_topic2)"/>
        <param name="depth_image_topic" value="$(arg input_depth_topic2)"/>
        <param name="camera_info_topic" value="$(arg camera2_info_color_topic)"/>
        <param name="camera_depth_info_topic" value="$(arg camera2_info_depth_topic)"/>
        <param name="input_pc_topic" value="$(arg input_pc_topic2)"/>
        <param name="output_image_topic" value="$(arg output_door_topic)"/>
        <param name="optical_frame" value="$(arg optical_frame)"/>
        <param name="optical_frame2" value="$(arg optical_frame)"/>
    </node> 

    <!-- LAUNCH THE PLANNER NODES -->
    <node name="open_door" pkg="qm_planner" type="open_door" output="screen"/>

</launch>