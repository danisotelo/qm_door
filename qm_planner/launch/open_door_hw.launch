<launch>
    <!-- LAUNCH THE CAMERA NODES -->
    <!-- Detection configuration -->
    <arg name="weights1" default="$(find qm_vision)/models/yolov8n-seg_handle.pt"/>
    <arg name="weights2" default="$(find qm_vision)/models/yolov8n_door.pt"/>
    <arg name="confidence_threshold"    default="0.75"/>
    <arg name="iou_threshold"           default="0.45"/>
    <arg name="maximum_detections"      default="1"/>
    <arg name="threshold_l"             default="30"/>
    <arg name="threshold_u"             default="255"/>

    <!-- Visualize using OpenCV window -->
    <arg name="view_image"      default="true"/>
    <!-- Publish images to ros topic -->
    <arg name="publish_image"   default="true"/>
    
    <!-- Input data topics -->
    <arg name="input_image_topic" default="/camera/color/image_raw"/>
    <arg name="input_image_topic2" default="/camera2/color/image_raw"/>
    <arg name="camera_info_color_topic" default="/camera/color/camera_info"/>
    <arg name="camera_info_depth_topic" default="/camera/depth/camera_info"/>
    <arg name="camera2_info_color_topic" default="/camera2/color/camera_info"/>
    <arg name="camera2_info_depth_topic" default="/camera2/depth/camera_info"/> 
    <arg name="input_depth_topic" default="/camera/depth/image_rect_raw"/>
    <arg name="input_depth_topic2" default="/camera2/depth/image_raw"/>
    <arg name="input_pc_topic"    default="/camera/depth_registered/points"/>
    <arg name="input_pc_topic2"    default="/camera2/depth_registered/points"/>
    <arg name="optical_frame"     default="camera_depth_optical_frame"/>
    <arg name="optical_frame2"     default="camera2_depth_optical_frame"/>

    <!-- Module topics-->
    <arg name="output_image_topic"              default="/yolo/image"/>
    <arg name="output_mask_topic"               default="/yolo/mask"/>
    <arg name="output_depth_topic"              default="/yolo/depth_registered"/>
    <arg name="output_masked_depth_nr_topic"    default="/yolo/depth_masked"/>
    <arg name="output_masked_depth_topic"       default="/yolo/masked_depth_registered"/>  
    <arg name="output_pc_topic"                 default="/handle/points"/>
    <arg name="output_centroid_topic"           default="/handle/centroid"/>
    <arg name="output_orientation_topic"        default="/handle/orientation"/>
    <arg name="output_door_topic"               default="/door/center"/>

    <arg name="camera"              default="camera"/>
    <arg name="tf_prefix"           default="$(arg camera)"/>
    <arg name="external_manager"    default="false"/>
    <arg name="manager"             default="realsense2_camera_manager"/>
    <arg name="initial_reset"       default="false"/>

    <!-- Camera device specific arguments -->

    <arg name="serial_no"           default="637202001197"/>
    <arg name="usb_port_id"         default=""/>
    <arg name="device_type"         default=""/>
    <arg name="json_file_path"      default=""/>

    <arg name="fisheye_width"       default="-1"/>
    <arg name="fisheye_height"      default="-1"/>
    <arg name="enable_fisheye"      default="false"/>

    <arg name="depth_width"         default="-1"/>
    <arg name="depth_height"        default="-1"/>
    <arg name="enable_depth"        default="true"/>

    <arg name="infra_width"         default="-1"/>
    <arg name="infra_height"        default="-1"/>
    <arg name="enable_infra1"       default="false"/>
    <arg name="enable_infra2"       default="false"/>

    <arg name="color_width"         default="-1"/>
    <arg name="color_height"        default="-1"/>
    <arg name="enable_color"        default="true"/>

    <arg name="fisheye_fps"         default="-1"/>
    <arg name="depth_fps"           default="-1"/>
    <arg name="infra_fps"           default="-1"/>
    <arg name="color_fps"           default="-1"/>
    <arg name="gyro_fps"            default="-1"/>
    <arg name="accel_fps"           default="-1"/>
    <arg name="enable_gyro"         default="false"/>
    <arg name="enable_accel"        default="false"/>

    <arg name="enable_pointcloud"   default="false"/>
    <arg name="enable_sync"         default="true"/>
    <arg name="align_depth"         default="false"/>
    <arg name="filters"             default=""/>

    <arg name="publish_tf"          default="true"/>
    <arg name="tf_publish_rate"     default="0"/> <!-- 0 - static transform -->

    <!-- rgbd_launch specific arguments -->

    <!-- Arguments for remapping all device namespaces -->
    <arg name="rgb"                             default="color" />
    <arg name="ir"                              default="infra1" />
    <arg name="depth"                           default="depth" />
    <arg name="depth_registered_pub"            default="depth_registered" />
    <arg name="depth_registered"                default="depth_registered" unless="$(arg align_depth)" />
    <arg name="depth_registered"                default="aligned_depth_to_color" if="$(arg align_depth)" />
    <arg name="depth_registered_filtered"       default="$(arg depth_registered)" />
    <arg name="projector"                       default="projector" />

    <!-- Disable bond topics by default -->
    <arg name="bond"                            default="false" />
    <arg name="respawn"                         default="$(arg bond)" />

    <!-- Processing Modules -->
    <arg name="rgb_processing"                  default="true"/>
    <arg name="debayer_processing"              default="false" />
    <arg name="ir_processing"                   default="false"/>
    <arg name="depth_processing"                default="false"/>
    <arg name="depth_registered_processing"     default="true"/>
    <arg name="disparity_processing"            default="false"/>
    <arg name="disparity_registered_processing" default="false"/>
    <arg name="hw_registered_processing"        default="$(arg align_depth)" />
    <arg name="sw_registered_processing"        default="true" unless="$(arg align_depth)" />
    <arg name="sw_registered_processing"        default="false" if="$(arg align_depth)" />

    <group ns="$(arg camera)">

        <!-- Launch the camera device nodelet-->
        <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
        <arg name="external_manager"         value="$(arg external_manager)"/>
        <arg name="manager"                  value="$(arg manager)"/>
        <arg name="tf_prefix"                value="$(arg tf_prefix)"/>
        <arg name="serial_no"                value="$(arg serial_no)"/>
        <arg name="usb_port_id"              value="$(arg usb_port_id)"/>
        <arg name="device_type"              value="$(arg device_type)"/>
        <arg name="json_file_path"           value="$(arg json_file_path)"/>

        <arg name="enable_pointcloud"        value="$(arg enable_pointcloud)"/>
        <arg name="enable_sync"              value="$(arg enable_sync)"/>
        <arg name="align_depth"              value="$(arg align_depth)"/>

        <arg name="fisheye_width"            value="$(arg fisheye_width)"/>
        <arg name="fisheye_height"           value="$(arg fisheye_height)"/>
        <arg name="enable_fisheye"           value="$(arg enable_fisheye)"/>

        <arg name="depth_width"              value="$(arg depth_width)"/>
        <arg name="depth_height"             value="$(arg depth_height)"/>
        <arg name="enable_depth"             value="$(arg enable_depth)"/>

        <arg name="color_width"              value="$(arg color_width)"/>
        <arg name="color_height"             value="$(arg color_height)"/>
        <arg name="enable_color"             value="$(arg enable_color)"/>

        <arg name="infra_width"              value="$(arg infra_width)"/>
        <arg name="infra_height"             value="$(arg infra_height)"/>
        <arg name="enable_infra1"            value="$(arg enable_infra1)"/>
        <arg name="enable_infra2"            value="$(arg enable_infra2)"/>

        <arg name="fisheye_fps"              value="$(arg fisheye_fps)"/>
        <arg name="depth_fps"                value="$(arg depth_fps)"/>
        <arg name="infra_fps"                value="$(arg infra_fps)"/>
        <arg name="color_fps"                value="$(arg color_fps)"/>
        <arg name="gyro_fps"                 value="$(arg gyro_fps)"/>
        <arg name="accel_fps"                value="$(arg accel_fps)"/>
        <arg name="enable_gyro"              value="$(arg enable_gyro)"/>
        <arg name="enable_accel"             value="$(arg enable_accel)"/>
        <arg name="filters"                  value="$(arg filters)"/>

        <arg name="publish_tf"               value="$(arg publish_tf)"/>
        <arg name="tf_publish_rate"          value="$(arg tf_publish_rate)"/>
        </include>

        <!-- RGB processing -->
        <include if="$(arg rgb_processing)"
                file="$(find rgbd_launch)/launch/includes/rgb.launch.xml">
        <arg name="manager"                       value="$(arg manager)" />
        <arg name="respawn"                       value="$(arg respawn)" />
        <arg name="rgb"                           value="$(arg rgb)" />
        <arg name="debayer_processing"            value="$(arg debayer_processing)" />
        </include>

        <group if="$(eval depth_registered_processing and sw_registered_processing)">
        <node pkg="nodelet" type="nodelet" name="register_depth"
                args="load depth_image_proc/register $(arg manager) $(arg bond)" respawn="$(arg respawn)">
            <remap from="rgb/camera_info"             to="$(arg rgb)/camera_info" />
            <remap from="depth/camera_info"           to="$(arg depth)/camera_info" />
            <remap from="depth/image_rect"            to="$(arg depth)/image_rect_raw" />
            <remap from="depth_registered/image_rect" to="$(arg output_depth_topic)" />
        </node>

        <!-- Publish registered XYZRGB point cloud with software registered input -->
        <node pkg="nodelet" type="nodelet" name="points_xyzrgb_sw_registered"
                args="load depth_image_proc/point_cloud_xyzrgb $(arg manager) $(arg bond)" respawn="$(arg respawn)">
            <remap from="rgb/image_rect_color"        to="$(arg rgb)/image_rect_color" />
            <remap from="rgb/camera_info"             to="$(arg rgb)/camera_info" />
            <remap from="depth_registered/image_rect" to="$(arg output_depth_topic)" />
            <remap from="depth_registered/points"     to="$(arg depth_registered)/points" />
        </node>
        </group>

        <group if="$(eval depth_registered_processing and hw_registered_processing)">
        <!-- Publish registered XYZRGB point cloud with hardware registered input (ROS Realsense depth alignment) -->
        <node pkg="nodelet" type="nodelet" name="points_xyzrgb_hw_registered"
                args="load depth_image_proc/point_cloud_xyzrgb $(arg manager) $(arg bond)" respawn="$(arg respawn)">
            <remap from="rgb/image_rect_color"        to="$(arg rgb)/image_rect_color" />
            <remap from="rgb/camera_info"             to="$(arg rgb)/camera_info" />
            <remap from="depth_registered/image_rect" to="$(arg depth_registered)/image_raw" />
            <remap from="depth_registered/points"     to="$(arg depth_registered_pub)/points" />
        </node>
        </group>

    </group>

    <node pkg="qm_vision" name="handle_pc" type="detect.py" output="screen">
        <param name="weights" value="$(arg weights1)"/>
        <param name="confidence_threshold" value="$(arg confidence_threshold)"/>
        <param name="iou_threshold" value="$(arg iou_threshold)" />
        <param name="maximum_detections" value="$(arg maximum_detections)"/>
        <param name="input_image_topic" value="$(arg input_image_topic)"/>
        <param name="input_depth_topic" value="$(arg input_depth_topic)"/> 
        <param name="view_image" value="$(arg view_image)"/>
        <param name="publish_image" value="$(arg publish_image)"/>
        <param name="camera_info_topic" value="$(arg camera_info_depth_topic)"/>
        <param name="output_image_topic" value="$(arg output_image_topic)"/>
        <param name="output_mask_topic" value="$(arg output_mask_topic)"/>
        <param name="output_masked_depth_nr_topic" value="$(arg output_masked_depth_nr_topic)"/>
        <param name="output_pc_topic" value="$(arg output_pc_topic)"/>
        <param name="optical_frame" value="$(arg optical_frame)"/>
    </node>

    <node pkg="qm_vision" name="handle_centroid" type="handle_centroid.py" output="screen">
        <param name="output_pc_topic" value="$(arg output_pc_topic)"/>
        <param name="output_centroid_topic" value="$(arg output_centroid_topic)"/>
        <param name="output_orientation_topic" value="$(arg output_orientation_topic)"/>
    </node>

    <node pkg="qm_vision" name="door_params" type="door_params.py" output="screen">
        <param name="view_image" value="$(arg view_image)"/>
        <param name="publish_image" value="$(arg publish_image)"/>
        <param name="output_mask_topic" value="$(arg output_mask_topic)"/>
        <param name="input_image_topic" value="$(arg input_image_topic)"/>
        <param name="camera_info_color_topic" value="$(arg camera_info_topic)"/>
        <param name="input_pc_topic" value="$(arg input_pc_topic)"/>
    </node>

    <node pkg="qm_vision" name="door_center" type="door_center.py" output="screen">
        <param name="weights" value="$(arg weights2)"/>
        <param name="confidence_threshold" value="$(arg confidence_threshold)"/>
        <param name="iou_threshold" value="$(arg iou_threshold)" />
        <param name="maximum_detections" value="$(arg maximum_detections)"/>
        <param name="view_image" value="$(arg view_image)"/>
        <param name="publish_image" value="$(arg publish_image)"/>
        <param name="output_centroid_topic" value="$(arg output_centroid_topic)"/>
        <param name="input_image_topic" value="$(arg input_image_topic2)"/>
        <param name="depth_image_topic" value="$(arg input_depth_topic2)"/>
        <param name="camera_info_topic" value="$(arg camera2_info_color_topic)"/>
        <param name="camera_depth_info_topic" value="$(arg camera2_info_depth_topic)"/>
        <param name="input_pc_topic" value="$(arg input_pc_topic2)"/>
        <param name="output_image_topic" value="$(arg output_door_topic)"/>
        <param name="optical_frame" value="$(arg optical_frame)"/>
        <param name="optical_frame2" value="$(arg optical_frame)"/>
    </node>

    <!-- LAUNCH THE PLANNER NODES -->
    <node name="open_door" pkg="qm_planner" type="open_door" output="screen"/>

</launch>